=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#pet
=end

custom_require.call(%w[common common-items drinfomon])

class Pet
  include DRC
  include DRCI

  def initialize
    arg_definitions = [
      [
        { name: 'pet_action', regex: /(stow|drop)/, optional: false, description: 'STOW or DROP to either stow your pet in their container or drop them to the ground.' },
        { name: 'pet_name', regex: /(\w+)/, optional: false, description: 'Name of your pet.' },
        { name: 'pet_container', regex: /(\w+)/, optional: false, description: 'Container for your pet.' },
        { name: 'debug', regex: /debug/i, optional: true, description: 'Enable debug output' },
      ]
    ]

    args = parse_args(arg_definitions, true)
    $debug_mode_pet = UserVars.pet_debug || args.debug

    echo args if $debug_mode_pet

    case args.pet_action
    when 'stow'
      stow_pet(args.pet_name, args.pet_container)
    when 'drop'
      drop_pet(args.pet_name, args.pet_container)
    end
  end

  def stow_pet(pet_name, pet_container)
    echo "stowing pet" if $debug_mode_pet
    if DRCI.in_hands?(pet_name)
      DRCI.put_away_item?(pet_name, pet_container)
    else
      wait_for_pet_to_arrive(pet_name, 15)
      case DRC.bput("get #{pet_name}", "You get", "You scoop", "What were you referring")
      when "You get", "You scoop"
        DRCI.put_away_item?(pet_name, pet_container)
      else
        DRC.message("Could not pick up pet, where did it go?")
        exit
      end
    end
  end

  def drop_pet(pet_name, pet_container)
    echo "dropping pet" if $debug_mode_pet
    if DRCI.get_item_if_not_held?(pet_name, pet_container)
      case DRC.bput("drop my #{pet_name}", "You set the .* on the ground", "No littering in the bank", "you can't drop anything here", "What were you referring")
      when "No littering in the bank", "you can't drop anything here"
        DRC.message("Can't drop pets in this room")
        stow_pet(pet_name, pet_container)
      when "What were you referring"
        DRC.message("Could not drop pet, where did it go?")
        exit
      end
    else
      DRC.message("Could not find pet, are you sure you have it?")
      exit
    end
  end

  # Pets follow you around but lag behind you.
  # It may take a few seconds for them to catch up to you.
  def wait_for_pet_to_arrive(pet_name, timeout)
    stop_time = Time.now + timeout
    until pet_in_room?(pet_name)
      echo "waiting for pet to arrive..." if $debug_mode_pet
      pause 2
      if Time.now > stop_time
        DRC.message("Pet never arrived after #{timeout} seconds, are you sure it's out?")
        exit
      end
    end
  end

  def pet_in_room?(pet_name)
    DRRoom.room_objs.any? do |obj|
      obj =~ /\b#{pet_name}\b/
    end
  end

end

Pet.new